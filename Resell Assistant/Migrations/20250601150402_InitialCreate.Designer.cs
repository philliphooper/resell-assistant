// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resell_Assistant.Data;

#nullable disable

namespace Resell_Assistant.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601150402_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Resell_Assistant.Models.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Confidence")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DealScore")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EstimatedSellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PotentialProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reasoning")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DealScore");

                    b.HasIndex("ProductId");

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Confidence = 78,
                            CreatedAt = new DateTime(2025, 5, 30, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(4645),
                            DealScore = 85,
                            EstimatedSellPrice = 800.00m,
                            PotentialProfit = 150.00m,
                            ProductId = 1,
                            Reasoning = "iPhone 13 Pro selling below market value. High demand product with consistent resale value."
                        },
                        new
                        {
                            Id = 2,
                            Confidence = 85,
                            CreatedAt = new DateTime(2025, 5, 31, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(4980),
                            DealScore = 92,
                            EstimatedSellPrice = 1050.00m,
                            PotentialProfit = 200.00m,
                            ProductId = 2,
                            Reasoning = "MacBook Air M1 priced significantly below retail. Strong market demand for Apple laptops."
                        },
                        new
                        {
                            Id = 3,
                            Confidence = 70,
                            CreatedAt = new DateTime(2025, 5, 29, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(4982),
                            DealScore = 75,
                            EstimatedSellPrice = 550.00m,
                            PotentialProfit = 100.00m,
                            ProductId = 3,
                            Reasoning = "PS5 at below MSRP. Gaming console with steady demand, moderate profit margin."
                        },
                        new
                        {
                            Id = 4,
                            Confidence = 82,
                            CreatedAt = new DateTime(2025, 6, 1, 9, 4, 2, 146, DateTimeKind.Utc).AddTicks(4984),
                            DealScore = 88,
                            EstimatedSellPrice = 250.00m,
                            PotentialProfit = 70.00m,
                            ProductId = 4,
                            Reasoning = "AirPods Pro 2nd gen at excellent price. High demand Apple accessory with strong resale market."
                        },
                        new
                        {
                            Id = 5,
                            Confidence = 75,
                            CreatedAt = new DateTime(2025, 5, 28, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(4986),
                            DealScore = 78,
                            EstimatedSellPrice = 345.00m,
                            PotentialProfit = 65.00m,
                            ProductId = 5,
                            Reasoning = "Nintendo Switch OLED priced well below retail. Popular gaming console with consistent demand."
                        },
                        new
                        {
                            Id = 6,
                            Confidence = 88,
                            CreatedAt = new DateTime(2025, 5, 27, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(4988),
                            DealScore = 90,
                            EstimatedSellPrice = 600.00m,
                            PotentialProfit = 180.00m,
                            ProductId = 6,
                            Reasoning = "iPad Air 5th gen significantly underpriced. Apple tablets hold value well and sell quickly."
                        },
                        new
                        {
                            Id = 7,
                            Confidence = 79,
                            CreatedAt = new DateTime(2025, 5, 26, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(4990),
                            DealScore = 82,
                            EstimatedSellPrice = 415.00m,
                            PotentialProfit = 95.00m,
                            ProductId = 8,
                            Reasoning = "Apple Watch Series 8 at competitive price. Wearables market strong with good profit margins."
                        });
                });

            modelBuilder.Entity("Resell_Assistant.Models.PriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marketplace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecordedAt");

                    b.HasIndex("ProductId", "Marketplace");

                    b.ToTable("PriceHistories");
                });

            modelBuilder.Entity("Resell_Assistant.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExternalUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExternalListing")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Marketplace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Marketplace");

                    b.HasIndex("Price");

                    b.HasIndex("Title");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Condition = "Used - Excellent",
                            CreatedAt = new DateTime(2025, 5, 30, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Excellent condition iPhone 13 Pro",
                            ImageUrl = "https://example.com/image1.jpg",
                            IsExternalListing = false,
                            Location = "New York, NY",
                            Marketplace = "eBay",
                            Price = 650.00m,
                            ShippingCost = 15.00m,
                            Title = "iPhone 13 Pro 128GB Unlocked",
                            Url = "https://example.com/iphone13pro"
                        },
                        new
                        {
                            Id = 2,
                            Condition = "Used - Good",
                            CreatedAt = new DateTime(2025, 5, 31, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7334),
                            Description = "2020 MacBook Air with M1 chip",
                            ImageUrl = "https://example.com/image2.jpg",
                            IsExternalListing = false,
                            Location = "Los Angeles, CA",
                            Marketplace = "Facebook Marketplace",
                            Price = 850.00m,
                            ShippingCost = 25.00m,
                            Title = "MacBook Air M1 256GB",
                            Url = "https://example.com/macbook"
                        },
                        new
                        {
                            Id = 3,
                            Condition = "New",
                            CreatedAt = new DateTime(2025, 5, 29, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7341),
                            Description = "Brand new PS5 console in original packaging",
                            ImageUrl = "https://example.com/image3.jpg",
                            IsExternalListing = false,
                            Location = "Chicago, IL",
                            Marketplace = "Craigslist",
                            Price = 450.00m,
                            ShippingCost = 20.00m,
                            Title = "Sony PlayStation 5 Console",
                            Url = "https://example.com/ps5"
                        },
                        new
                        {
                            Id = 4,
                            Condition = "New",
                            CreatedAt = new DateTime(2025, 6, 1, 9, 4, 2, 145, DateTimeKind.Utc).AddTicks(7343),
                            Description = "Sealed AirPods Pro with active noise cancellation",
                            ImageUrl = "https://example.com/image4.jpg",
                            IsExternalListing = false,
                            Location = "Austin, TX",
                            Marketplace = "eBay",
                            Price = 180.00m,
                            ShippingCost = 10.00m,
                            Title = "AirPods Pro 2nd Generation",
                            Url = "https://example.com/airpods"
                        },
                        new
                        {
                            Id = 5,
                            Condition = "Used - Like New",
                            CreatedAt = new DateTime(2025, 5, 28, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7374),
                            Description = "White Nintendo Switch OLED console with joy-cons",
                            ImageUrl = "https://example.com/image5.jpg",
                            IsExternalListing = false,
                            Location = "Seattle, WA",
                            Marketplace = "Facebook Marketplace",
                            Price = 280.00m,
                            ShippingCost = 15.00m,
                            Title = "Nintendo Switch OLED",
                            Url = "https://example.com/nintendo"
                        },
                        new
                        {
                            Id = 6,
                            Condition = "Used - Very Good",
                            CreatedAt = new DateTime(2025, 5, 27, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7376),
                            Description = "Space Gray iPad Air with Wi-Fi",
                            ImageUrl = "https://example.com/image6.jpg",
                            IsExternalListing = false,
                            Location = "Miami, FL",
                            Marketplace = "eBay",
                            Price = 420.00m,
                            ShippingCost = 12.00m,
                            Title = "iPad Air 5th Gen 64GB",
                            Url = "https://example.com/ipad"
                        },
                        new
                        {
                            Id = 7,
                            Condition = "Used - Good",
                            CreatedAt = new DateTime(2025, 5, 24, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7378),
                            Description = "Unlocked Samsung flagship phone",
                            ImageUrl = "https://example.com/image7.jpg",
                            IsExternalListing = false,
                            Location = "Phoenix, AZ",
                            Marketplace = "Craigslist",
                            Price = 780.00m,
                            ShippingCost = 18.00m,
                            Title = "Samsung Galaxy S23 Ultra 256GB",
                            Url = "https://example.com/samsung"
                        },
                        new
                        {
                            Id = 8,
                            Condition = "Used - Excellent",
                            CreatedAt = new DateTime(2025, 5, 26, 15, 4, 2, 145, DateTimeKind.Utc).AddTicks(7381),
                            Description = "GPS model Apple Watch with sport band",
                            ImageUrl = "https://example.com/image8.jpg",
                            IsExternalListing = false,
                            Location = "Denver, CO",
                            Marketplace = "Facebook Marketplace",
                            Price = 320.00m,
                            ShippingCost = 8.00m,
                            Title = "Apple Watch Series 8 45mm",
                            Url = "https://example.com/applewatch"
                        });
                });

            modelBuilder.Entity("Resell_Assistant.Models.SearchAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastTriggered")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marketplace")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("SearchQuery")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("IsActive");

                    b.HasIndex("SearchQuery");

                    b.ToTable("SearchAlerts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 25, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(6988),
                            IsActive = true,
                            MaxPrice = 700.00m,
                            MinProfit = 100.00m,
                            SearchQuery = "iPhone 13 Pro"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 27, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(7201),
                            IsActive = true,
                            MaxPrice = 900.00m,
                            MinProfit = 150.00m,
                            SearchQuery = "MacBook Air M1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 22, 15, 4, 2, 146, DateTimeKind.Utc).AddTicks(7204),
                            IsActive = false,
                            MaxPrice = 500.00m,
                            MinProfit = 80.00m,
                            SearchQuery = "PlayStation 5"
                        });
                });

            modelBuilder.Entity("Resell_Assistant.Models.UserPortfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SellDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseDate");

                    b.HasIndex("SellDate");

                    b.HasIndex("Status");

                    b.ToTable("UserPortfolios");
                });

            modelBuilder.Entity("Resell_Assistant.Models.Deal", b =>
                {
                    b.HasOne("Resell_Assistant.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Resell_Assistant.Models.PriceHistory", b =>
                {
                    b.HasOne("Resell_Assistant.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Resell_Assistant.Models.UserPortfolio", b =>
                {
                    b.HasOne("Resell_Assistant.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
